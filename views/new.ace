= content header
  link rel=stylesheet href=/static/node_modules/bootstrap-tokenfield/dist/css/bootstrap-tokenfield.min.css
  link rel=stylesheet href=/static/node_modules/bootstrap-slider/dist/css/bootstrap-slider.min.css
  script type="text/javascript" src="/static/node_modules/bootstrap-tokenfield/dist/bootstrap-tokenfield.min.js"
  script type="text/javascript" src="/static/node_modules/bootstrap-slider/dist/bootstrap-slider.min.js"

= content main
  h3 New Service

  form.form-horizontal action=/new method=post
    .form-group
      label.col-sm-2.control-label for=inputGitHub
        a href={{$.conf.GitHub.Host}} target=_blank GitHub
      #inputGitHub.col-sm-10
        span {{$.conf.GitHub.Host}}/
        select#github_org.form-control name=github_org style="width: auto; display: inline-block;"
          option value={{.userLogin|normalizeByHyphen}} selected=selected {{.userLogin}}
          {{range .orgs}}
          option value={{.Login|normalizeByHyphen}} {{.Login}}
          {{end}}
        span /
        select#github_repo.form-control name=github_repo style="width: auto; display: inline-block;"
        span :
        select#git_branch.form-control name=git_branch style="width: auto; display: inline-block;"

    .form-group
      label.col-sm-2.control-label for=inputService Service
      .col-sm-10
        input#inputService.form-control name=service type=text

    = include _meta_ports .

    = include _meta_common .

    .form-group
      .col-sm-offset-2.col-sm-10
        .checkbox
          label
            {{if .form.AutoDeploy}}
            input name=auto_deploy type=checkbox checked=checked Auto Deploy
            {{else}}
            input name=auto_deploy type=checkbox Auto Deploy
            {{end}}

    = include _meta_envvar .

    = include _meta_volume .

    .form-group
      .col-sm-offset-2.col-sm-10
        button#githubSubmitBtn.btn.btn-primary style="margin-right:10px" type=submit Submit
        button.btn.btn-default type=reset Reset

= content script
  script src=/static/node_modules/jquery-chained/jquery.chained.remote.js
  = javascript
    $(document).ready(function () {
      $("#github_repo").remoteChained({
        parents: "#github_org",
        url: "/ajax/github/repos",
        loading: "Loading..."
      });
      $("#git_branch").remoteChained({
        parents: "#github_repo",
        depends: "#github_org",
        url: "/ajax/github/branches",
        loading: "Loading..."
      });

      var github_repo_init = false;
      $("#github_repo").change(function (e) {
        if ($("#github_repo").val() == '' || $("#github_repo").val() == null) {
          $('#githubSubmitBtn').prop('disabled', true);
          return;
        }
        $('#githubSubmitBtn').prop('disabled', false);

        if (github_repo_init) {
          return;
        }
        if ('{{.form.GithubRepo}}' != '' && $("#github_repo option").length > 0 && $("#github_repo").val() != '{{.form.GithubRepo}}') {
          $("#github_repo").val('{{.form.GithubRepo}}');
          github_repo_init = true;
          $("#github_repo").change();
        }
      });

      var git_branch_init = false;
      $("#git_branch").change(function (e) {
        if ($("#git_branch").val() == '' || $("#git_branch").val() == null) {
          $('#githubSubmitBtn').prop('disabled', true);
          return;
        }
        $('#githubSubmitBtn').prop('disabled', false);
        var service = normalize($("#git_branch").val(), $("#github_repo").val());
        $("#inputService").val(service);
        if (git_branch_init) {
          return;
        }

        if ('{{.form.GitBranch}}' != '' && $("#git_branch option").length > 0 && $("#git_branch").val() != '{{.form.GitBranch}}') {
          $("#git_branch").val('{{.form.GitBranch}}');
          var service = normalize($("#git_branch").val(), $("#github_repo").val());
          $("#inputService").val(service);
          git_branch_init = true;
        }
      });

      if ('{{.form.GithubOrg}}' != '') {
        $("#github_org").val('{{.form.GithubOrg}}')
      }

      $("#github_org").change();

      $('.tokenfield').tokenfield({
        createTokensOnBlur: true
      });
    });
